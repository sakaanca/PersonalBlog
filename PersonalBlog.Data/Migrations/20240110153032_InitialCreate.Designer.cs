// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalBlog.Data.Concrete.EntityFramework.Contexts;

#nullable disable

namespace PersonalBlog.Data.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20240110153032_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.AboutMe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MyCVPath")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MyJop")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MyJopFA")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("AboutMe", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1998, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(4904),
                            FirstName = "M. Kaan",
                            ImagePath = "",
                            IsActive = false,
                            IsDelete = false,
                            LastName = "SARICA",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(4905),
                            MyCVPath = "",
                            MyJop = "WEB DEVELOPER",
                            MyJopFA = "<i class=\"fa-regular fa-laptop-code\"></i>"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SQAnswer")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SecurityQuestion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Admin", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(5934),
                            EMail = "kaansarıca@hotmail.com",
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(5935),
                            Password = "202cb962ac59075b964b07152d234b70",
                            SQAnswer = "d595878cf4d099846b16890e7d9fc490",
                            SecurityQuestion = " Baba İsmi ?"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SeoDecription")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("SeoTags")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ShortContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Thumbnail")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ViewsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Articles", (string)null);
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryFA")
                        .HasMaxLength(150)
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Comments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ArticIeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("ArticIeId");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShortAdress")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("Id");

                    b.ToTable("ContactInfo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "Gülbağ Mah. Şişli / İstanbul",
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(8065),
                            EMail = "kaansarıca@hotmail.com",
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(8066),
                            PhoneNumber = "+90 541 918 5633",
                            ShortAdress = " Şişli / İstanbul"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Avarge")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("School")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Education", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avarge = "2.65/4",
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(7017),
                            Description = "Doktore yapmayı hedefliyorum .",
                            Duration = "2020 yılı Harita Mühendislği bölümünden mezun ",
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(7018),
                            School = "İstanbul Teknik Üniversitesi",
                            Title = "Lisans Derecesi"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Experiences", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WorkPlace")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Experiences", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(1727),
                            Description = "Çağdaş dünyanın gerçeklerinden biri olan teknoloji ile hareket etmein zorunluluğun son derece farkında olmanın haklı grurunu yaşıyorum.",
                            Duration = "Haziran 2023 ve ...",
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(1728),
                            Title = "Frelance Web Developer",
                            WorkPlace = "freelance"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.HomePageSliders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShortContent")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("HomePageSliders", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "",
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(9662),
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(9663),
                            ShortContent = "Lorem Ipsum, dizgi ve baskı endüstrisinde kullanılan mıgır metinlerdir. Lorem Ipsum, adı bilinmeyen bir matbaacının bir hurufat numune kitabı oluşturmak üzere bir yazı galerisini alarak karıştırdığı 1500'lerden beri endüstri standardı sahte metinler olarak kullanılmıştır. ",
                            Title = "Web Developper"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Interesteds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.ToTable("Interesteds", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(7447),
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(7448),
                            Text = "Yazılım ve Teknoloji"
                        },
                        new
                        {
                            Id = 2,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(7451),
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(7451),
                            Text = "Haritacılık Faaliyetleri"
                        },
                        new
                        {
                            Id = 3,
                            CreatedByName = "InitialCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(7453),
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(7453),
                            Text = "Tarım ve Hayvancılık faaliyetleri"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Messages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("Messages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(2725),
                            EMail = "deneme@gmail.com",
                            FirstName = "Hasan",
                            IsActive = false,
                            IsDelete = false,
                            LastName = "Erdal",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(2726),
                            Subject = "deneme",
                            Text = "Dün Gece Yar Hanesinde\r\n                 Yastığım Bir Taş İdi\r\n                 Altım Çamur Üstüm Yağmur\r\n                 Gine Gönlüm Hoş İdi\r\n                 Ben Yandım Seni Bilmem\r\n                 Dağ Ne Kadar Yüce Olsa\r\n                 Bir Kenarı Yol Olur\r\n                 Buna Bayram Günü Derler\r\n                 Dostla Düşman Bir Olur\r\n                 Ben Yandım Seni Bilmem\r\n                 Sen Bugün Nadan İle Gezdin\r\n                 Merak Oldu Bana Sen Bugün Nadan İle Gezdin\r\n                 Merak Oldu Bana Çeşmi Mestimden Bile Süzdüm\r\n                 Merak Oldu Bana\r\n                 Ben Yandım Seni Bilmem"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.SiteIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desciption")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Keywords")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LogoFA")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("LogoText")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("SiteIdentity", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(3717),
                            Desciption = "M. Kaan SARICA Web Developer",
                            IsActive = false,
                            IsDelete = false,
                            Keywords = "C#, .NET , WEB ,SOFTWARE",
                            LogoFA = "<i class=\"fas fa - h - square\"></i>",
                            LogoText = "M. Kaan SARICA",
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(3717),
                            Title = "Hasan Erdal"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Skills", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PercentageValue")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Skills", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(606),
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 224, DateTimeKind.Local).AddTicks(606),
                            PercentageValue = 75,
                            Title = "C#"
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.SocialMediaAccounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AccountFA")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AccountUrl")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SocialMediaAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "Facebook",
                            AccountFA = "<i class=\"fa-brands fa-facebook-f\"></i>",
                            AccountUrl = "https://www.facebook.com/profile.php?id=100086037936445&locale=tr_TR",
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(8491),
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(8491)
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Summary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Summary", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Selemlarrrr Blog siteme hoş geldiniz :) Ben Kağan  Harita Mühendisiyim . Yazılım sektörüne olan ilgim 2020 yılında başladı . Şu anda C# ile WEB kodluyor ReactNative ile Mobile geliştiriyorum . Asli hedefim Harita Mühendislği ve Yazılımı entegre edip sonrasında teknolojik tarım kavramının en mühim gereksinimi olan Uzaktan Algılama bilim dalı ile projeler üretmek. Aslında pek kararsızım ama hayırlısı diyerek devam etmek istiyorum ... Saygı ve Sevgiyle kalın :)",
                            CreatedByName = "InitailCreated",
                            CreatedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(6551),
                            IsActive = false,
                            IsDelete = false,
                            ModifiedByName = "InitialCreated",
                            ModifiedTime = new DateTime(2024, 1, 10, 18, 30, 32, 223, DateTimeKind.Local).AddTicks(6551)
                        });
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.HasOne("PersonalBlog.Entities.Concrete.Categories", "Categories")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Comments", b =>
                {
                    b.HasOne("PersonalBlog.Entities.Concrete.Articles", "Articles")
                        .WithMany("Comments")
                        .HasForeignKey("ArticIeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Articles");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Articles", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("PersonalBlog.Entities.Concrete.Categories", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
